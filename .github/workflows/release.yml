name: Build and Release

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      actions: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip build twine

      - name: Build sdist and wheel
        run: |
          python -m build --sdist --wheel

      - name: Make launcher executable and Create GitHub Release and upload artifacts
        run: |
          chmod +x tools/sync-tools-launcher.sh || true
        - name: Create GitHub Release and upload artifacts
          uses: softprops/action-gh-release@v1
          with:
            files: |
              dist/*
              tools/sync-tools-launcher.sh
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload artifact for CI debugging (optional)
        uses: actions/upload-artifact@v4
        with:
          name: dist-files
          path: dist/

      - name: Verify version matches tag
        if: startsWith(github.ref, 'refs/tags/v')
        run: |
          TAG=${GITHUB_REF#refs/tags/}
          PKG_VER=$(python -c "import tomllib,sys; print(tomllib.loads(open('pyproject.toml','rb').read())['project']['version'])")
          echo "tag=$TAG pkg=$PKG_VER"
          if [ "v$PKG_VER" != "$TAG" ]; then
            echo "Tag and package version mismatch" >&2
            exit 1
          fi
        env:
          GITHUB_REF: ${{ github.ref }}

      - name: Publish to Test PyPI (optional)
        if: github.ref == 'refs/heads/develop' || startsWith(github.ref, 'refs/tags/v')
        run: |
          python -m pip install --upgrade twine
          if [ -n "${{ secrets.TEST_PYPI_API_TOKEN }}" ]; then
            python -m twine upload --repository-url https://test.pypi.org/legacy/ -u __token__ -p "${{ secrets.TEST_PYPI_API_TOKEN }}" dist/* || true
          else
            echo "TEST_PYPI_API_TOKEN not configured, skipping Test PyPI publish"
          fi

      - name: Publish to PyPI (via pypa action)
        if: startsWith(github.ref, 'refs/tags/v')
        uses: pypa/gh-action-pypi-publish@v1.5.0
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
